---
- name: Create pihole directory
  file:
    path: "/home/{{ ansible_user }}/pihole"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    mode: 0755

- name: Determine Pi-hole host IPs (HA mode)
  set_fact:
    pihole_local_ipv4: "{{ pihole_vip_ipv4.split('/')[0] }}"
    pihole_local_ipv6: "{{ pihole_vip_ipv6.split('/')[0] }}"
    execution_mode: "HA setup with keepalived"
  when: pihole_ha_mode == true

- name: Deploy Docker Compose file
  template:
    src: docker-compose.yml.j2
    dest: "{{ dir_loc }}/docker-compose.yml"

- name: Pull docker image
  community.docker.docker_image_pull:
    name: "{{ pihole_image }}"
    platform: "{{ ansible_architecture }}"

#Fix for resolve conf on ubuntu
- name: Configure systemd-resolved for Pi-hole
  block:
    - name: Disable DNSStubListener in systemd-resolved configuration
      lineinfile:
        path: /etc/systemd/resolved.conf
        regexp: '^#?DNSStubListener='
        line: 'DNSStubListener=no'
        backup: true

    - name: Remove /etc/resolv.conf if it exists
      file:
        path: /etc/resolv.conf
        state: absent

    - name: Create symlink for resolv.conf
      file:
        src: /run/systemd/resolve/resolv.conf
        dest: /etc/resolv.conf
        state: link

    - name: Restart systemd-resolved
      ansible.builtin.systemd_service:
        name: systemd-resolved
        state: restarted
  when: ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution'] == 'Ubuntu'

- name: Restart docker
  ansible.builtin.systemd_service:
    name: docker
    state: restarted

- name: Start Pi-hole service
  command: docker compose up -d
  args:
    chdir: "{{ dir_loc }}"
  become: true

- name: Stop and disable resolver
  ansible.builtin.service:
    name: systemd-resolved
    state: stopped
    enabled: false
  when: ansible_distribution == 'Ubuntu'



