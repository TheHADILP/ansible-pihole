- name: Install Docker SDK for python
  pip:
    name: 
      - docker
      - requests
    extra_args: "--user"
    break_system_packages: true

- name: Create pihole directory
  file:
    path: "/home/{{ ansible_user }}/pihole"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    mode: 0755

- name: Determine Pi-hole host IPs (HA mode)
  set_fact:
    pihole_local_ipv4: "{{ pihole_vip_ipv4.split('/')[0] }}"
    pihole_local_ipv6: "{{ pihole_vip_ipv6.split('/')[0] }}"
    execution_mode: "HA setup with keepalived"
  when: pihole_ha_mode == true

- name: Determine Pi-hole host IPs (single mode)
  set_fact:
    pihole_local_ipv4: "{{ ansible_host }}"
    pihole_local_ipv6: "{{ ipv6 }}"
    execution_mode: "single node setup"
  when: pihole_ha_mode == false

- name: Create Pi-hole configuration directories
  file:
    path: '{{ dir_loc }}/{{ item }}'
    state: directory
  with_items:
    - /etc/pihole
    - /etc/dnsmasq.d
  become: true

- name: Deploy Docker Compose file
  template:
    src: docker-compose.yml.j2
    dest: "{{ dir_loc }}/docker-compose.yml"
  become: true

- name: Start Pi-hole service
  command: docker compose up -d
  args:
    chdir: "{{ dir_loc }}"
  become: true

- name: Stop and disable resolver
  ansible.builtin.service:
    name: systemd-resolved
    state: stopped
    enabled: false
  when: ansible_distribution == 'Ubuntu'

- name: Default firewalld rules
  ansible.posix.firewalld:
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
    zone: public
  with_items:
    - http
    - https
    - dns

- name: Bootps firewalld rule
  ansible.posix.firewalld:
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
    zone: public
  with_items:
    - bootps
  when: pihole_rev_server == true

- name: Check if DHCP is enabled
  set_fact:
    pihole_dhcp_enabled: "{{ pihole_environment_variables.DHCP_ACTIVE | lower == 'true' }}"

- name: Allow DHCP port in the firewall (if enabled)
  firewalld:
    service: dhcp
    permanent: true
    state: enabled
    immediate: true
  when: pihole_dhcp_enabled
  become: true

- name: Check pihole container
  uri:
    url: http://localhost/admin
  register: result
  until: result.status == 200
  retries: 5
  delay: 10

- name: Remove old image versions
  docker_prune:
    images: true
    images_filters:
      dangling: false

- name: INFORMATION
  debug:
    msg:
      - "In the {{ execution_mode }} make sure to point your DNS server settings here:"
      - "DNSv4: {{ pihole_local_ipv4 }}"
      - "DNSv6: {{ pihole_local_ipv6 }}"
