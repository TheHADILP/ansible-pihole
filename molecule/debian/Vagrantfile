# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

    ## Script to ensure password auth on the eth1 works ###
    $script = <<-SCRIPT

    # Path to the SSHD configuration file
    SSHD_CONFIG="/etc/ssh/sshd_config"

    # Backup the original SSHD config file
    if [ ! -f "${SSHD_CONFIG}.bak" ]; then
        echo "Creating a backup of the SSHD config file..."
        sudo cp "$SSHD_CONFIG" "${SSHD_CONFIG}.bak"
    fi

    # Ensure PasswordAuthentication is always uncommented and set to yes
    echo "Ensuring 'PasswordAuthentication' is set to 'yes'..."
    sudo sed -i 's/^#*PasswordAuthentication .*/PasswordAuthentication yes/' "$SSHD_CONFIG"

    # Restart SSH service to apply changes
    echo "Restarting the SSH service..."
    sudo systemctl restart sshd

    echo "Password-based authentication has been enabled and applied."

    SCRIPT

  config.vm.provider "virtualbox" do |v|
	v.memory = 2048
  	v.cpus = 2
  end

  ##### DEFINE VM #####\
  config.vm.define "vagrant-pihole-01" do |config|
    config.vm.hostname = 'vagrant-pihole-01'
    config.vm.box = "bento/debian-12"
    config.vm.box_check_update = true
    #config.vm.provision "shell", inline: $script
    config.vm.network "private_network", ip: "192.168.56.4"
  end

  config.vm.define "vagrant-pihole-02" do |config|
    config.vm.hostname = 'vagrant-pihole-02'
    config.vm.box = "bento/debian-12"
    config.vm.box_check_update = true
    #config.vm.provision "shell", inline: $script
    config.vm.network "private_network", ip: "192.168.56.5"
  end

  config.trigger.after :destroy do |trigger|
    trigger.info = "Removing known_hosts entries"
    trigger.run = {inline: "ssh-keygen -R 192.168.56.4"}
    trigger.run = {inline: "ssh-keygen -R 192.168.56.5"}
  end 
  
end
